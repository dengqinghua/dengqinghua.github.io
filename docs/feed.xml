<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="https://dengqinghua.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dengqinghua.github.io/" rel="alternate" type="text/html" /><updated>2021-08-24T01:04:34+08:00</updated><id>https://dengqinghua.github.io/feed.xml</id><title type="html">Dengqinghua.42</title><subtitle>Everything I think
</subtitle><author><name>dengqinghua</name></author><entry><title type="html">pulsar 队列实践</title><link href="https://dengqinghua.github.io/queue.html" rel="alternate" type="text/html" title="pulsar 队列实践" /><published>2021-08-16T00:00:00+08:00</published><updated>2021-08-16T00:00:00+08:00</updated><id>https://dengqinghua.github.io/queue</id><content type="html" xml:base="https://dengqinghua.github.io/queue.html">&lt;h2 id=&quot;architecture&quot;&gt;Architecture&lt;/h2&gt;
&lt;h3 id=&quot;架构&quot;&gt;架构&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/pul-system-architecture.png&quot; alt=&quot;pul-system-architecture.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pulsar.apache.org/docs/en/2.3.2/concepts-messaging&quot;&gt;Ref&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;消息订阅方式&quot;&gt;消息订阅方式&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/pul-subscription-modes.png&quot; alt=&quot;pul-subscribe&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://pulsar.apache.org/docs/en/2.3.2/concepts-messaging/&quot;&gt;Ref&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;消息的生命周期&quot;&gt;消息的生命周期&lt;/h3&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
  produce(生产数据)
  consumer(被不同的消费者, 并进行 ACK);
  expire(过期 和 清理);
  produce--&amp;gt;consumer--&amp;gt;expire
&lt;/div&gt;

&lt;p&gt;更多消息相关, 见 &lt;a href=&quot;http://pulsar.apache.org/docs/en/concepts-messaging&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;event-和-元数据&quot;&gt;Event 和 元数据&lt;/h2&gt;
&lt;h3 id=&quot;event-治理&quot;&gt;Event 治理&lt;/h3&gt;
&lt;p&gt;在 Ease 的后端服务中, 我们是通过 &lt;a href=&quot;https://gitlab.easeprime.com/ease/lib-box/-/tree/master/common-lib/src/main/java/com/easeprime/bfs/common/event&quot;&gt;common-lib&lt;/a&gt; 包进行封装和处理的&lt;/p&gt;

&lt;p&gt;该部分的组织形式如下&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
  subgraph 消费者
  eventConsumer(eventConsumer);
  h1(handler1);
  h2(handler2);
  event2(&quot;onEvent(event)&quot;)
  eventConsumer--&amp;gt;h1 &amp;amp; h2 --&amp;gt; event2
  end

  subgraph 生产者
  eventProducer(eventProducer);
  pulsar1(Topic: pulsar-media);
  event1(SendEvent)
  eventProducer--&amp;gt;pulsar1--&amp;gt;event1
  end

  subgraph 事件定义
  event(event)
  payload(payload)
  eventType(eventType);
  eventCode(eventCode);
  desc(desc);
  event--&amp;gt;eventType &amp;amp; payload
  eventType--&amp;gt;eventCode &amp;amp; desc;
  end
&lt;/div&gt;

&lt;p&gt;当用户完成一个音频的播放时候的操作&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
  subgraph 消费者
  eventConsumer(eventConsumer);
  h1(DE完播计算 handler);
  h2(用户播放数据缓存刷新 handler);
  h3(XXX Handler);
  eventConsumer--&amp;gt;h1 &amp;amp; h2 &amp;amp; h3
  end

  subgraph 生产者
  eventProducer(eventProducer);
  pulsar1(Topic: media);
  event1(发送事件: MEDIA_LOG_FINISH)
  eventProducer--&amp;gt;pulsar1--&amp;gt;event1
  end

  subgraph 音频播放完成事件
  event(event)
  payload(MediaLogFinishPayload)
  payload1(mediaId)
  payload2(memberId)
  payload3(playTo)
  eventType(MEDIA_LOG_FINISH);
  event--&amp;gt;eventType &amp;amp; payload
  payload --&amp;gt; payload1 &amp;amp; payload2 &amp;amp; payload3
  end
&lt;/div&gt;

&lt;h3 id=&quot;元数据&quot;&gt;元数据&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;eventId 和 targetId&lt;/p&gt;

    &lt;p&gt;这里会要求传 targetId, 用来作为 有序消费。我们经常的场景是: 同一个用户id 的某种类型数据，希望可以有序地消费&lt;/p&gt;

    &lt;p&gt;比如用户的统计数据, 如果是队列本身可以保证有序, 则大概率是有序的, 可以避免过多的数据库的锁竞争问题&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;消费次数和消息丢失的问题&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;pulsar 不能保证 exactl once, 一些重要的业务需要自己能保证是可重复执行的&lt;/li&gt;
      &lt;li&gt;理论上消息是不会丢失的, 但是在 Rebalance 时, 也可能出现数据丢失的情况&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;更多内容见 &lt;a href=&quot;https://pulsar.apache.org/docs/en/2.7.1/concepts-messaging/&quot;&gt;concepts-messaging&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;事件和事务的问题&lt;/p&gt;

    &lt;p&gt;有时候会因为业务本身的复杂性, 在很多个业务逻辑的 上下文，都会发送对应的事件&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nd&quot;&gt;@Transactional&lt;/span&gt;
 &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doSth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// ① 更新用户信息&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;updateMember&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;sendMemberUpdateEvent&lt;/span&gt;

   &lt;span class=&quot;c1&quot;&gt;// ② 更新Vip状态&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;updateMemberVip&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;sendMemberVipUpdateEvent&lt;/span&gt;

   &lt;span class=&quot;c1&quot;&gt;// ③ 记录日志&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;updateMemberVipLog&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;如果上面在 ③  记录日志的时候报错了，那么会导致 ①  和 ②  回滚, 此时事件理论上被发出去了, 会导致其他的业务逻辑的问题。&lt;/p&gt;

    &lt;p&gt;故这里发送事件的逻辑专门进行了处理。注意&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;所有的事件，都是在 事务提交 之后，才会进行发送。&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;代码实现逻辑见&lt;a href=&quot;https://gitlab.easeprime.com/ease/lib-box/-/blob/master/common-lib/src/main/java/com/easeprime/bfs/common/event/AbstractEventProducer.java#L61&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;部署方式&quot;&gt;部署方式&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/pul-deploy1.png&quot; alt=&quot;deploy1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;如何跟踪和查询&quot;&gt;如何跟踪和查询&lt;/h2&gt;
&lt;p&gt;方式1: 根据用户id 或者 deviceId 进行&lt;a href=&quot;https://es-ras1ax3s.kibana.tencentelasticsearch.com:5601/goto/71238f43bd59b8022e7ee9f67238eb45&quot;&gt;查询&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/pul-example1.png&quot; alt=&quot;example1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;方式2: 查看用户的消费 &lt;a href=&quot;https://es-ras1ax3s.kibana.tencentelasticsearch.com:5601/app/discover#/context/5a116e80-b931-11eb-83c7-d711353ac049/toW5UnsBQlxvtLDU4s7e?_g=(filters:!())&amp;amp;_a=(columns:!(message,container.name),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!t,index:'5a116e80-b931-11eb-83c7-d711353ac049',key:container.name,negate:!t,params:(query:dev_backend_service_8881),type:phrase),query:(match_phrase:(container.name:dev_backend_service_8881))),('$state':(store:appState),meta:(alias:!n,disabled:!t,index:'5a116e80-b931-11eb-83c7-d711353ac049',key:container.name,negate:!t,params:(query:dev_backend_service_8880),type:phrase),query:(match_phrase:(container.name:dev_backend_service_8880)))))&quot;&gt;上下文&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/pul-example2.png&quot; alt=&quot;example2&quot; /&gt;&lt;/p&gt;</content><author><name>dengqinghua</name></author><summary type="html">Architecture 架构</summary></entry><entry><title type="html">录音相关的思考</title><link href="https://dengqinghua.github.io/r1.html" rel="alternate" type="text/html" title="录音相关的思考" /><published>2021-07-30T00:00:00+08:00</published><updated>2021-07-30T00:00:00+08:00</updated><id>https://dengqinghua.github.io/r1</id><content type="html" xml:base="https://dengqinghua.github.io/r1.html">&lt;blockquote&gt;
  &lt;p&gt;如何提高录音的效率？多练习基本功，提高专注度，多听，多感受…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;录音&quot;&gt;录音&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;一定要跟着节拍器慢速练习，无任何呲音和其他的问题时，再进行录音&lt;/li&gt;
  &lt;li&gt;如果在 &lt;strong&gt;30分钟&lt;/strong&gt; 内未完成一次完整的录音，则放弃录音并再进行练习&lt;/li&gt;
  &lt;li&gt;一次的录音时间控制在 &lt;strong&gt;60分钟&lt;/strong&gt; 内&lt;/li&gt;
  &lt;li&gt;在录音之前，不能持续弹奏时间超过 &lt;strong&gt;30分钟&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;练习&quot;&gt;练习&lt;/h2&gt;
&lt;h3 id=&quot;基本功&quot;&gt;基本功&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;爬格子, 保留指 慢速&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./boxed-penatonic&quot;&gt;音阶, box penatonic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;./chord-inversion&quot;&gt;和弦, chord inversion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pan.baidu.com/disk/home#/all?vmode=list&amp;amp;path=%2F42%2F%E9%9F%B3%E4%B9%90%2F%E6%95%99%E6%9D%90%2FProGuitar%2FopenStringLick&quot;&gt;open string licks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pan.baidu.com/disk/home#/all?vmode=list&amp;amp;path=%2F42%2F%E9%9F%B3%E4%B9%90%2F%E6%95%99%E6%9D%90%2FProGuitar%2FbanjoRolls&quot;&gt;banjo rolls&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pan.baidu.com/disk/home#/all?vmode=list&amp;amp;path=%2F42%2F%E9%9F%B3%E4%B9%90%2F%E6%95%99%E6%9D%90%2FProGuitar%2Fharmonic&quot;&gt;harp harmonics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pan.baidu.com/disk/home#/all?vmode=list&amp;amp;path=%2F42%2F%E9%9F%B3%E4%B9%90%2F%E6%95%99%E6%9D%90%2FProGuitar%2FArp&quot;&gt;arppeggio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;曲子&quot;&gt;曲子&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;多听原曲，在练习的时候一定要多听原曲，感受原曲的律动&lt;/li&gt;
  &lt;li&gt;节拍器是必须的，要尝试多种不同的速度进行演奏, 看自己的极限在哪里&lt;/li&gt;
  &lt;li&gt;练习的时候就进行录音，不是整块的录音而是录片段（不需要视频，只是录音）&lt;/li&gt;
  &lt;li&gt;不熟练的地方一定要反复练习, 现阶段主要包括
    &lt;ul&gt;
      &lt;li&gt;和弦转换, 不能太快也不能太慢，保留音要做好&lt;/li&gt;
      &lt;li&gt;切音的时值, 控制好对应的时值&lt;/li&gt;
      &lt;li&gt;勾弦问题，勾弦一定要有力而且均匀，需要经常练习&lt;/li&gt;
      &lt;li&gt;速度问题，需要每个音都弹得很清晰&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;将自己已经录音过的曲子也放入到练习中, 并且尝试改变其中的音，节奏, 和弦, key 和 速度&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;混音&quot;&gt;混音&lt;/h2&gt;
&lt;p&gt;LogicPro&lt;/p&gt;</content><author><name>dengqinghua</name></author><summary type="html">如何提高录音的效率？多练习基本功，提高专注度，多听，多感受…</summary></entry><entry><title type="html">推荐系统 Notes</title><link href="https://dengqinghua.github.io/recommend-sys.html" rel="alternate" type="text/html" title="推荐系统 Notes" /><published>2021-07-29T00:00:00+08:00</published><updated>2021-07-29T00:00:00+08:00</updated><id>https://dengqinghua.github.io/recommend-sys</id><content type="html" xml:base="https://dengqinghua.github.io/recommend-sys.html">&lt;h2 id=&quot;基本方式&quot;&gt;基本方式&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;基于行为的协同过滤&lt;/p&gt;

    &lt;p&gt;你选择了A, 跟 A 相似的东西会推荐给你&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于内容相似推荐&lt;/p&gt;

    &lt;p&gt;你选择了A, 跟 A 属于相同类别的东西会推荐给你&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;解决的问题&quot;&gt;解决的问题&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;信息过载。是帮用户从非常多的数据中(比如上千万的商品)选择&lt;/li&gt;
  &lt;li&gt;挖掘长尾。长尾一般是冷门数据，冷门数据的总和往往比热门数据要多，冷门数据也具有非常大的价值&lt;/li&gt;
  &lt;li&gt;用户体验。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;环节&quot;&gt;环节&lt;/h2&gt;
&lt;p&gt;问题: 从海量数据中，提取和用户相关的十几条数据，并且在 XXX ms 内返回&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
  input([原始数据 &lt;br /&gt; 亿/千万])
  callback(召回 &lt;br /&gt;万/千);
  sort(排序 &lt;br /&gt;千/百);
  filter(调整 &lt;br /&gt;百/十);
  output([结果 &lt;br /&gt; 十])
  input--&amp;gt;callback--&amp;gt;sort--&amp;gt;filter--&amp;gt;output
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;召回解决了信息过载的问题，将数量级极大地降低&lt;/li&gt;
  &lt;li&gt;排序可以使用二分算法, 得出用户是否喜欢(喜欢1 不喜欢为0) 和 喜欢的概率, 这样就能得到权重
    &lt;blockquote&gt;
      &lt;p&gt;如果数量不大, 则可以绕过召回阶段, 直接进行排序&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;调整做到了 去重, 已读过滤/在线过滤, 热门补足, 分页 和 合并内容信息等&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;召回路劲&quot;&gt;召回路劲&lt;/h3&gt;
&lt;p&gt;名词解释&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;u: user, 用户&lt;/li&gt;
  &lt;li&gt;i: item&lt;/li&gt;
  &lt;li&gt;2: to, 代表的是边&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;u2i 代表的是 user to item&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
  user(用户)
  item(item);
  user--&amp;gt;item
&lt;/div&gt;

&lt;p&gt;推荐系统解决的是 用户如何找到 item&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
  user(用户)
  unkown(...);
  item(item);
  user--&amp;gt;unkown--&amp;gt;item
&lt;/div&gt;

&lt;p&gt;这里提出了召回方式&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;路劲&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;解释&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;例子&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;方法&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;i2i&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;你看了itemA,推荐给你itemB&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;头条的相似文章推荐&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;item相似度, 协同过滤 和 关联规则(比如人工标注)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;u2i&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;用户的直接行为&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;点击过的内容但是未购买的商品, 很容易产生购买行为&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;用户行为数据&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;u2i2i&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;将 u2i 得到的结果, 推荐给新的用户&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N/A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;u2u2i&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;用户聚类，获得相似的用户，再根据用户的推荐给当前用户&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;相同年龄/性别的用户, 相同点击行为的用户推荐相似的内容&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;用户聚类, 用户行为，来进行 u2u 部分&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;u2tag2i&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;先算出用户的tag, 在匹配 tag 和 item 的关系&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;豆瓣, B站的 tag, tag效果比较好, 内容不会扩展&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;u2***2i&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;基于图的算法&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;netflix推荐架构&quot;&gt;Netflix推荐架构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;assets/images/netflix_framework.png&quot; alt=&quot;framework&quot; width=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Offline, 计算离线数据, 一般提供 小时/天/月 级别的数据
    &lt;ul&gt;
      &lt;li&gt;海量数据存储和计算&lt;/li&gt;
      &lt;li&gt;离线计算&lt;/li&gt;
      &lt;li&gt;机器学习和模型训练&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Nearline, 利用离线数据和当前的实时数据, 计算当前的热数据和 TopN 数据等，存储到缓存中
    &lt;ul&gt;
      &lt;li&gt;接收实时事件&lt;/li&gt;
      &lt;li&gt;计算实时数据并写入缓存&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Online, 直接面向外部提供接口, 一般是直接从 Nearline 的缓存存储中拿到数据返回, 有时延要求
    &lt;ul&gt;
      &lt;li&gt;分发用户事件&lt;/li&gt;
      &lt;li&gt;组装缓存中的数据
        &lt;blockquote&gt;
          &lt;p&gt;如果是数据不大的话，可以考虑只有两层, Online 和 Offline, Offline 直接将结果写入告诉缓存即可&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;技术架构&quot;&gt;技术架构&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Offline&lt;/li&gt;
  &lt;li&gt;Nearline&lt;/li&gt;
  &lt;li&gt;Online&lt;/li&gt;
  &lt;li&gt;存储
    &lt;ul&gt;
      &lt;li&gt;redis&lt;/li&gt;
      &lt;li&gt;memcache&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;超时处理, 兜底补足&lt;/li&gt;
  &lt;li&gt;本地LRU缓存&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;基于内容的推荐content-based&quot;&gt;基于内容的推荐(content-based)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;给用户推荐 之前喜欢过的物品, 以及相似的物品。 即 u2i2i 和 u2Tag2i, 仅分析单用户本身, 用户和用户之间的行为互不干涉和影响&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    subgraph 用户
    action(偏好);
    action1(点赞 &lt;br /&gt;权重 2);
    action2(收藏 &lt;br /&gt;权重 3);
    action3(播放 &lt;br /&gt;权重 1);
    aa(偏好向量 &lt;br /&gt;故事3 白噪声2 ... );
    action --&amp;gt; action1 &amp;amp; action2 &amp;amp; action3--&amp;gt;aa
    end
    subgraph 内容
    taged(特征 &lt;br /&gt;故事/白噪音/仙侠);
    t1(故事 &lt;br /&gt;权重 2);
    t2(音乐 &lt;br /&gt;权重 3);
    t3(白噪声 &lt;br /&gt;权重 1);
    bb(特征向量 &lt;br /&gt;故事3 白噪声4 ... );
    taged --&amp;gt; t1 &amp;amp; t2 &amp;amp; t3--&amp;gt;bb
    end
    subgraph 推荐
    cc(推荐的内容列表 &lt;br /&gt; 利用余弦相似度算法计算TopN物品)
    end
    aa --&amp;gt; cc
    bb --&amp;gt; cc
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;余弦相似度计算, 计算向量和向量之间的距离&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;只需要单个用户的信息，用户和用户之间没有关联&lt;/li&gt;
  &lt;li&gt;可以推荐最新的或者冷门的物品&lt;/li&gt;
  &lt;li&gt;容易做解释&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;内容标签需要人工打&lt;/li&gt;
  &lt;li&gt;用户的潜在兴趣无法挖掘&lt;/li&gt;
  &lt;li&gt;全新用户没法推荐(冷启动问题)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;落地方案&quot;&gt;落地方案&lt;/h3&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    subgraph Offline
      storage1(存储1 &lt;br /&gt; MySQL);
      storage2(存储2 &lt;br /&gt; ES ?);
      storage3(存储3 &lt;br /&gt; ...);
      cal(计算用户和内容的匹配度 &lt;br /&gt;余弦相似度, 皮尔逊相关系数 和 Jaccard);
      cache(缓存 &lt;br /&gt;Redis);
    end
    subgraph Nearline
      EventHandler(事件收集 &lt;br /&gt; EventListener 或者 Redis);
    end
    subgraph Online
      event1(用户行为事件 &lt;br /&gt; 收藏 播放 分享 ...);
      event2(新内容发布);
      fetch(获取推荐的内容TopN数据);
      do(聚合和处理);
    end

    event1 &amp;amp; event2--&amp;gt;EventHandler--&amp;gt;storage1 &amp;amp; storage2 &amp;amp; storage3--&amp;gt;cal--&amp;gt;cache--&amp;gt;fetch--&amp;gt;do
&lt;/div&gt;

&lt;p&gt;考虑点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;基于当前的业务量和数据, 尽量使用简单的方式, 不引入新的中间件和非常重的框架(所以这里不会考虑引入 kafka, Spark 等工具)&lt;/li&gt;
  &lt;li&gt;计算路劲足够快和有效, 但是需要有超时设计&lt;/li&gt;
  &lt;li&gt;需要考虑是否应该有数据补足和兜底方案，在新用户进入的时候，提供一批系统预设的数据(解决冷启动问题)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;备选方案&quot;&gt;备选方案&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;直接按照需求直接读库实时计算&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;基于协同的推荐cf-collaborative-filtering&quot;&gt;基于协同的推荐(CF, Collaborative Filtering)&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;使用行为数据，利用集体智慧，即 用户和用户的行为，物品和物品之间相互交叉和干涉，主要包括 u2u2i 和 u2i2i&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;u2u2i: user1喜欢 x1, user2也喜欢 x1; 那么user1喜欢的 x2 可以推荐给 user2&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;u2i2i: user1喜欢 x1, x1 和 x2 很相似; 那么 可以推荐 x2 给 user1.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下面的例子: 用户A，B，C 已经对部分 item 进行了打分, 现在要给 用户A 的 item 进行排序 和 推荐&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;用户/item的评分&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item2&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item3&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item4&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item5&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item6&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item7&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;用户A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2分&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;用户B&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;用户C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2分&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8分&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;通过协同过滤的方式如下&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB
    uu(搜索和用户A和用户B, C的 相似度);
    ii(根据相似度, 估算用户A 在新item3和item4的分数);
    uu --&amp;gt; ii
&lt;/div&gt;

&lt;p&gt;相似度计算&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jaccard相似度&lt;/li&gt;
  &lt;li&gt;余弦相似度&lt;/li&gt;
  &lt;li&gt;皮尔逊相关系数, Pearson’s r&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ref&quot;&gt;Ref&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1Dz411B7wd&quot;&gt;推荐系统学习视频&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://netflixtechblog.com/system-architectures-for-personalization-and-recommendation-e081aa94b5d8&quot;&gt;Netflix 推荐系统架构&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fxsjy/jieba&quot;&gt;中文分词&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ai.tencent.com/ailab/nlp/en/embedding.html&quot;&gt;Tencent Word2Vec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://spark.apache.org/docs/2.2.3/ml-features.html&quot;&gt;Spark ML features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><summary type="html">基本方式</summary></entry><entry><title type="html">Apple Pay</title><link href="https://dengqinghua.github.io/apple-pay.html" rel="alternate" type="text/html" title="Apple Pay" /><published>2021-07-28T00:00:00+08:00</published><updated>2021-07-28T00:00:00+08:00</updated><id>https://dengqinghua.github.io/apple-pay</id><content type="html" xml:base="https://dengqinghua.github.io/apple-pay.html">&lt;div class=&quot;mermaid&quot;&gt;
sequenceDiagram
    autonumber
    participant sdk as iOS SDK
    participant b as Backend
    participant as as Apple Service
    sdk-&amp;gt;&amp;gt;b: 获取商品列表
    b--&amp;gt;&amp;gt;sdk: 从后台获取商品id和对应展示的图片文案信息
    sdk-&amp;gt;&amp;gt;b: 根据商品id 生成/获取预订单
    Note right of sdk: 需要先去查一下这个用户在商品id下之前是不是有未完成的订单
    b--&amp;gt;&amp;gt;sdk: 返回 订单sid
    sdk-&amp;gt;&amp;gt;as: 发起真实的支付
    as--&amp;gt;&amp;gt;sdk: 用户支付, 苹果返回票据信息(receipt-data)&lt;br /&gt;如果苹果未返回, 则在 App 启动的时候返回
    sdk-&amp;gt;&amp;gt;b: 提交票据信息和 订单sid 到服务端
    Note right of sdk: 这一步容易丢单, 如何解决? &lt;br /&gt;因为苹果容易丢失掉订单sid &lt;br /&gt;需要取未完成的一条
    b-&amp;gt;&amp;gt;as: 验证票据信息
    as--&amp;gt;&amp;gt;b: 验证成功/失败
    b--&amp;gt;&amp;gt;sdk: 修改订单状态, 并通知SDK支付成功或失败
    sdk--&amp;gt;&amp;gt;as: 成功则将订单进行关闭
&lt;/div&gt;

&lt;p&gt;连续订阅&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    pay([用户签订协议, 获取 receipt]);
    receipt([记录 订单 和 receipt]);
    verify([建议每天都拿receipt去苹果那边验证]);
    getNotDelay([发现有未过期的订单信息])
    success([扣款成功])
    pay--&amp;gt;receipt--&amp;gt;verify--&amp;gt;getNotDelay--&amp;gt;success--&amp;gt;verify
&lt;/div&gt;

&lt;p&gt;需提供的接口:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;商品列表接口&lt;/li&gt;
  &lt;li&gt;创建订单接口&lt;/li&gt;
  &lt;li&gt;提交票据信息接口&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;关键点:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;记录收据信息, 校验收据是否完成&lt;/li&gt;
  &lt;li&gt;订单号没有给的情况，需要自己去找对应的订单&lt;/li&gt;
  &lt;li&gt;收据成功获取之后，需要服务端告诉 收据 的验签结果
    &lt;ul&gt;
      &lt;li&gt;成功, 客户端关单&lt;/li&gt;
      &lt;li&gt;失败, 提供客户端信息&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;参考:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/@tyy.sh/in-app-purchase-%E6%80%BB%E7%BB%93-e8a88a54d8d9&quot;&gt;IAP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ifumei.cc/2019/12/24/iospay/&quot;&gt;springboot接入苹果内购&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/documentation/storekit/original_api_for_in-app_purchase/validating_receipts_with_the_app_store&quot;&gt;苹果校验流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><summary type="html">sequenceDiagram autonumber participant sdk as iOS SDK participant b as Backend participant as as Apple Service sdk-&amp;gt;&amp;gt;b: 获取商品列表 b--&amp;gt;&amp;gt;sdk: 从后台获取商品id和对应展示的图片文案信息 sdk-&amp;gt;&amp;gt;b: 根据商品id 生成/获取预订单 Note right of sdk: 需要先去查一下这个用户在商品id下之前是不是有未完成的订单 b--&amp;gt;&amp;gt;sdk: 返回 订单sid sdk-&amp;gt;&amp;gt;as: 发起真实的支付 as--&amp;gt;&amp;gt;sdk: 用户支付, 苹果返回票据信息(receipt-data)如果苹果未返回, 则在 App 启动的时候返回 sdk-&amp;gt;&amp;gt;b: 提交票据信息和 订单sid 到服务端 Note right of sdk: 这一步容易丢单, 如何解决? 因为苹果容易丢失掉订单sid 需要取未完成的一条 b-&amp;gt;&amp;gt;as: 验证票据信息 as--&amp;gt;&amp;gt;b: 验证成功/失败 b--&amp;gt;&amp;gt;sdk: 修改订单状态, 并通知SDK支付成功或失败 sdk--&amp;gt;&amp;gt;as: 成功则将订单进行关闭</summary></entry><entry><title type="html">ease backend from 0 to 1</title><link href="https://dengqinghua.github.io/3-month-sharing.html" rel="alternate" type="text/html" title="ease backend from 0 to 1" /><published>2021-07-26T00:00:00+08:00</published><updated>2021-07-26T00:00:00+08:00</updated><id>https://dengqinghua.github.io/3-month-sharing</id><content type="html" xml:base="https://dengqinghua.github.io/3-month-sharing.html">&lt;p&gt;该部分为后端团队(2人) 从0到1 搭建的一套架构体系。&lt;/p&gt;

&lt;p&gt;由于公司和团队的整体规模不大，从业务的发展和业务的复杂度来说 ，
应选择&lt;strong&gt;快速部署，成本(机器/运维和部署)低，依赖少，稳定性高&lt;/strong&gt;的架构。&lt;/p&gt;

&lt;p&gt;这里的架构主要由三部分构成&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Devops；基于 gitlab CI/CD 轻量级Devops, 可实现完整的快速部署，扩容的操作&lt;/li&gt;
  &lt;li&gt;业务；前后端分离，后端使用 BFF + Microservice 的架构，前端使用 React 技术栈&lt;/li&gt;
  &lt;li&gt;中间件；选择比较稳定的中间件，如 MySQL，Redis 和 ES 等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从成本问题上考虑，大多数的中间件都是购买的，会根据现有的业务情况选择不同类型的中间件&lt;/p&gt;

&lt;h2 id=&quot;架构&quot;&gt;架构&lt;/h2&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB;
    arch([Ease 后端架构]);
    op([Devops]);
    op1(gitlab CI/CD)
    op11(自动部署)
    op12(快速扩容)
    op13(权限控制)
    op2(指标数据)
    op3(报警)
    op31(业务数据)
    op32(错误率)
    op33(服务器指标)
    op21(系统/业务数据)
    op22(SLO/SLI)
    op23(SBA)
    op24(压测)
    biz([业务]);
    biz1(Java);
    biz11(BFF &lt;br /&gt;App);
    biz12(BFF &lt;br /&gt;Admin);
    biz2(React+Antd);
    biz-m1(microservice&lt;br /&gt; 内容)
    biz-m3(microservice&lt;br /&gt; 支付)
    biz-m4(microservice&lt;br /&gt; 用户)
    biz-other(...)
    biz22(CRM);
    biz23(H5);
    sys([中间件]);
    sys0(Nginx);
    sys00(HTTPS);
    sys01(反向代理);
    sys02(负载均衡);
    sys03(HTTP Auth);
    sys1(ELK);
    sys11(日志收集);
    sys12(报表输出);
    sys2(BI);
    sys3(MySQL);
    sys4(Redis);
    sys5(队列);
    arch--&amp;gt;op &amp;amp; biz &amp;amp; sys;
    op--&amp;gt;op1 &amp;amp; op2 &amp;amp; op3;
    op1--&amp;gt;op11 &amp;amp; op12 &amp;amp; op13;
    op2--&amp;gt;op21 &amp;amp; op22 &amp;amp; op23 &amp;amp; op24;
    op3--&amp;gt;op31 &amp;amp; op32 &amp;amp; op33;
    biz--&amp;gt;biz1 &amp;amp; biz2;
    biz1--&amp;gt;biz11 &amp;amp; biz12;
    biz2--&amp;gt;biz22 &amp;amp; biz23;
    sys--&amp;gt;sys0 &amp;amp; sys1 &amp;amp; sys2 &amp;amp; sys3 &amp;amp; sys4 &amp;amp; sys5;
    sys1--&amp;gt;sys11 &amp;amp; sys12;
    sys0--&amp;gt;sys00 &amp;amp; sys01 &amp;amp; sys02 &amp;amp; sys03;
    biz11 --&amp;gt; biz-m3 &amp;amp; biz-m4
    biz11 &amp;amp; biz12 --&amp;gt; biz-m1 &amp;amp; biz-other

    style op fill:#f9f,stroke:#333,stroke-width:4px
    style biz fill:#f9f,stroke:#333,stroke-width:4px
    style sys fill:#f9f,stroke:#333,stroke-width:4px

    style op1 fill:#f96f,stroke:#333,stroke-width:4px
    style op2 fill:#f96f,stroke:#333,stroke-width:4px
    style biz1 fill:#f96f,stroke:#333,stroke-width:4px
    style biz2 fill:#f96f,stroke:#333,stroke-width:4px
    style sys0 fill:#f96f,stroke:#333,stroke-width:4px
    style sys1 fill:#f96f,stroke:#333,stroke-width:4px
    style sys2 fill:#f96f,stroke:#333,stroke-width:4px
    style sys3 fill:#f96f,stroke:#333,stroke-width:4px
    style sys4 fill:#f96f,stroke:#333,stroke-width:4px

    style op3 fill:#f96f,stroke-dasharray: 5 5
    style sys5 fill:#f96f,stroke-dasharray: 5 5
&lt;/div&gt;

&lt;h3 id=&quot;devops&quot;&gt;Devops&lt;/h3&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TB;
    op([Devops]);
    op1(gitlab CI/CD)
    op11(自动部署)
    op12(快速扩容)
    op13(权限控制)
    op2(指标数据)
    op20(日志数据 &lt;br /&gt; ELK)
    op21(SLO/SLI &lt;br /&gt; Kibana看板)
    op22(系统数据 &lt;br /&gt; Netdata)
    op23(业务数据 &lt;br /&gt; BI看板)
    op24(SBA &lt;br /&gt; Spring Metrics)
    op25(服务质量 &lt;br /&gt; TPS)
    op3(报警)
    op31(业务数据)
    op32(错误率)
    op33(服务器指标)
    op--&amp;gt;op1 &amp;amp; op2 &amp;amp; op3;
    op1--&amp;gt;op11 &amp;amp; op12 &amp;amp; op13;
    op2--&amp;gt;op20 &amp;amp; op21 &amp;amp; op22 &amp;amp; op23 &amp;amp; op24 &amp;amp; op25;
    op3--&amp;gt;op31 &amp;amp; op32 &amp;amp; op33;
    click op11 &quot;https://gitlab.easeprime.com/ease/backend_service/-/blob/dev/.gitlab-ci.yml#L17&quot; _blank
    click op12 &quot;https://gitlab.easeprime.com/ease/nginx-prod-conf/-/blob/master/sites-enabled-erb/java&quot; _blank
    click op13 &quot;https://gitlab.easeprime.com/ease/backend_service/-/settings/ci_cd&quot; _blank
    click op1 &quot;https://docs.gitlab.com/ee/ci/introduction/img/gitlab_workflow_example_11_9.png&quot; _blank
    click op20 &quot;https://es-ras1ax3s.kibana.tencentelasticsearch.com:5601/app/discover#/?_g=(filters:!(),query:(language:kuery,query:''),refreshInterval:(pause:!f,value:900000),time:(from:now-24h,to:now))&amp;amp;_a=(columns:!(message,container.name),filters:!(),index:'16ad3800-cf56-11eb-83c7-d711353ac049',interval:auto,query:(language:kuery,query:''),sort:!())&quot; _blank
    click op21 &quot;http://bi.easeprime.com/question/9?type=STORY&amp;amp;percent=0.99&amp;amp;day=30&amp;amp;playCount=10&amp;amp;dayCreatedAt=30&quot; _blank
    click op22 &quot;http://metrics.easeprime.com&quot; _blank
    click op23 &quot;http://bi.easeprime.com/question/9?type=STORY&amp;amp;percent=0.99&amp;amp;day=30&amp;amp;playCount=10&amp;amp;dayCreatedAt=30&quot; _blank
    click op24 &quot;http://sba.easeprime.com&quot; _blank
    style op3 fill:#f96f,stroke-dasharray: 5 5
&lt;/div&gt;

&lt;h4 id=&quot;gitlab&quot;&gt;Gitlab&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;时间线&lt;/p&gt;

    &lt;div class=&quot;mermaid&quot;&gt;
 graph LR;
     zero([搭建 gitlab &lt;br /&gt; 4C8G]);
     onlyDev([单分支部署 &lt;br /&gt; dev]);
     multiDev([多分支部署 单机器部署&lt;br /&gt; dev, relase_xxx]);
     multiMachine([多机器部署 &lt;br /&gt; main, backup1, backup2]);
     rollback([支持快速回滚 &lt;br /&gt; app-release1.jar &lt;br /&gt; app-release2.jar &lt;br /&gt; ...]);
     zero--&amp;gt;onlyDev--&amp;gt;multiDev--&amp;gt;multiMachine--&amp;gt;rollback
 &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;遇到的一些坑&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;需要在每一台机器中安装 &lt;a href=&quot;https://docs.gitlab.com/runner/&quot;&gt;gitlab-runner&lt;/a&gt;，runner 需要执行 build/deploy 步骤需要很高的权限
        &lt;details&gt;
          &lt;summary&gt;
eg
&lt;/summary&gt;
          &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gitlab-runner ALL=(ALL) NOPASSWD: /usr/sbin/nginx, /usr/bin/cp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;          &lt;/div&gt;
        &lt;/details&gt;
      &lt;/li&gt;
      &lt;li&gt;gitlab 需要和每一个 runner 进行心跳连接, 存储对应的信息, 再加上很多文件操作, 非常&lt;a href=&quot;https://docs.gitlab.com/omnibus/settings/memory_constrained_envs.html&quot;&gt;耗费内存&lt;/a&gt;, 需要设置服务器 SWAP
        &lt;details&gt;
          &lt;summary&gt;
swap
&lt;/summary&gt;
          &lt;blockquote&gt;
            &lt;p&gt;Swap is &lt;strong&gt;a dedicated space on disk that is used when physical RAM is full&lt;/strong&gt;.&lt;/p&gt;
          &lt;/blockquote&gt;
        &lt;/details&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;gitlab 和 gitee 对比&lt;/p&gt;

        &lt;table&gt;
          &lt;thead&gt;
            &lt;tr&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;维度&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;gitee&lt;/th&gt;
              &lt;th style=&quot;text-align: center&quot;&gt;gitlab&lt;/th&gt;
            &lt;/tr&gt;
          &lt;/thead&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;运维成本&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;低&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml&quot;&gt;较高&lt;/a&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;CI/CD能力&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;低，本身的 Gitee Go 在&lt;a href=&quot;https://gitee.com/help/articles/4293#article-header0&quot;&gt;内测&lt;/a&gt;中, 官方建议使用 Jenkins 等第三方工具&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;高, gitlab-runner 已具备完整生产能力&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;稳定性&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;高&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;低&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;安全性&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;较高&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;高&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;是否收费&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;基本功能免费, CI/CD 有对应的免费时长&lt;/td&gt;
              &lt;td style=&quot;text-align: center&quot;&gt;免费&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;业务&quot;&gt;业务&lt;/h3&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TB;
    biz([业务]);
    biz1(Java);
    biz11(BFF &lt;br /&gt;App);
    biz12(BFF &lt;br /&gt;Admin);
    biz2(React+Antd);
    biz-m1(microservice&lt;br /&gt; 内容&lt;br /&gt;单曲 合集 Q&amp;amp;E 老师等)
    biz-m3(microservice&lt;br /&gt; 支付&lt;br /&gt; 微信 支付宝 华为支付 苹果支付)
    biz-m4(microservice&lt;br /&gt; 用户&lt;br /&gt;登录/注册 反馈 VIP信息)
    biz-m5(microservice&lt;br /&gt; 运营活动&lt;br /&gt; 广告 Banner 优惠活动)
    biz-m6(microservice&lt;br /&gt; 用户日志&lt;br /&gt;音频播放日志)
    biz-m7(microservice&lt;br /&gt; RBAC&lt;br /&gt;权限 角色)
    biz22(CRM);
    biz23(H5);
    biz--&amp;gt;biz1 &amp;amp; biz2;
    biz1--&amp;gt;biz11 &amp;amp; biz12;
    biz2--&amp;gt;biz22 &amp;amp; biz23;
    biz11 --&amp;gt; biz-m3 &amp;amp; biz-m4 &amp;amp; biz-m6
    biz11 &amp;amp; biz12 --&amp;gt; biz-m1 &amp;amp; biz-m5 &amp;amp; biz-m7
&lt;/div&gt;

&lt;h4 id=&quot;bff&quot;&gt;BFF&lt;/h4&gt;
&lt;p&gt;BFF, Backend for Frontend&lt;/p&gt;

&lt;p&gt;BFF 层为流量入口, 主要处理 鉴权，参数校验，拼装 microservice 接口中需要的参数，并聚合各个 microservice 的返回结果, 一般来说，我们的缓存也会放在 BFF 层&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB;
    biz1(首页为你接口 &lt;br /&gt;/tag/media/group/v2/forYou);
    check(校验参数 获取用户id);
    biz11(内容&lt;br /&gt;单曲 合集 Q&amp;amp;E 老师等);
    biz12(用户&lt;br /&gt; VIP信息);
    biz13(运营活动&lt;br /&gt; 广告 Banner 优惠活动);
    biz14(用户日志&lt;br /&gt;音频播放日志);
    final(聚合数据)
    biz1--&amp;gt;check--&amp;gt;biz11 &amp;amp; biz12 &amp;amp; biz13 &amp;amp; biz14--&amp;gt;final;

    style biz11 fill:#f96f,stroke-dasharray: 5 5
    style biz13 fill:#f96f,stroke-dasharray: 5 5
&lt;/div&gt;

&lt;h3 id=&quot;中间件&quot;&gt;中间件&lt;/h3&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph TB;
    sys([中间件]);
    sys0(Nginx);
    sys00(HTTPS);
    sys01(反向代理);
    sys02(负载均衡);
    sys03(HTTP Auth);
    sys1(ELK);
    sys11(日志收集);
    sys12(报表输出);
    sys2(BI/大数据);
    sys3(MySQL);
    sys4(Redis);
    sys5(队列);
    sys--&amp;gt;sys0 &amp;amp; sys1 &amp;amp; sys2 &amp;amp; sys3 &amp;amp; sys4 &amp;amp; sys5;
    sys0--&amp;gt;sys00 &amp;amp; sys01 &amp;amp; sys02 &amp;amp; sys03;
    sys1--&amp;gt;sys11 &amp;amp; sys12;
&lt;/div&gt;

&lt;h4 id=&quot;nginx&quot;&gt;Nginx&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;时间线&lt;/p&gt;

    &lt;div class=&quot;mermaid&quot;&gt;
 graph LR;
     doInMachine([服务器进行配置]);
     restart([手动进行重启服务]);
     hard([扩容困难且容易配置错误]);
     gitLab([配置文件用git进行管理]);
     erb([配置文件模板化 &lt;br /&gt; 支持环境变量]);
     ci([gitlab-ci核心数据配置 &lt;br /&gt; 进行配置检查 和 服务重启]);
     doInMachine--&amp;gt;restart--&amp;gt;hard--&amp;gt;gitLab--&amp;gt;erb--&amp;gt;ci
 &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.easeprime.com/ease/nginx-stage-conf&quot;&gt;nginx-dev&amp;amp;qa-conf&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gitlab.easeprime.com/ease/nginx-prod-conf&quot;&gt;nginx-prod-conf&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;details&gt;
      &lt;summary&gt;
 Nginx CI 过程
 &lt;/summary&gt;
      &lt;ol&gt;
        &lt;li&gt;编写 ERB 文件, 如 java-dev-erb 文件
          &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; upstream java_dev_server {
    server &amp;lt;%= ENV[&quot;JAVA_DEV_HOST&quot;] %&amp;gt;:8880;
    server &amp;lt;%= ENV[&quot;JAVA_DEV_HOST&quot;] %&amp;gt;:8881;
 }
 server {
         listen 80;

         server_name dev-api.easeprime.com;
         location / {
             proxy_pass http://java_dev_server;
         }
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;在 gitlab-ci 中配置环境变量
          &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; variables:
   DEV_HOST: 172.21.0.7 
   JAVA_DEV_HOST: $DEV_HOST
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;生成最终的配置文件
          &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; erb java-dev-erb java-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;          &lt;/div&gt;
        &lt;/li&gt;
        &lt;li&gt;拷贝文件, 并检查配置, 无问题后重启 nginx
          &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; nginx -t
 nginx -s reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;          &lt;/div&gt;
        &lt;/li&gt;
      &lt;/ol&gt;
    &lt;/details&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;遇到的一些坑&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;nginx 的配置文件&lt;a href=&quot;https://serverfault.com/questions/577370/how-can-i-use-environment-variables-in-nginx-conf&quot;&gt;不支持环境变量&lt;/a&gt;，只能通过 shell 脚本如 envsubstr 或者第三方工具来进行配置，这里用的是 ruby 的 &lt;a href=&quot;https://docs.ruby-lang.org/en/2.3.0/ERB.html&quot;&gt;erb&lt;/a&gt; 生成的 nginx 配置文件&lt;/li&gt;
      &lt;li&gt;nginx 的配置语法比较 tricky, 学习成本比较高&lt;/li&gt;
    &lt;/ul&gt;

    &lt;details&gt;
      &lt;summary&gt;
 eg.
 &lt;/summary&gt;
      &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  location ~* /swagger-ui/.+\.html$ {
    proxy_pass http://java_dev_server;

  auth_basic &quot;Private Property&quot;;
  auth_basic_user_file /etc/nginx/.htpasswd;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/details&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;elk&quot;&gt;ELK&lt;/h4&gt;
&lt;details&gt;
  &lt;summary&gt;
what is ELK?
&lt;/summary&gt;

  &lt;blockquote&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.elastic.co/static-res/images/elk/elk-stack-elkb-diagram.svg&quot;&gt;E，elasticsearch; L，logstash; K，kibana&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;beats 收集日志, logstash 处理日志, elasticsearch 存储日志, kibana 查询数据。例子如下&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;filebeat收集服务日志:
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  { &quot;message&quot;: &quot;2021-07-27 10:52:42.066  INFO 1 --- ..., url = /api/advertisement/detail, caller = {}, params = [{&quot;code&quot;:&quot;relax&quot;}], result = {&quot;code&quot;:&quot;200&quot;,&quot;status&quot;:200}, time cost = 3 ms&quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;logstash处理, 将 message 中的 url 和 耗时提取出来
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  {
     &quot;message&quot;: &quot;原来的message字段&quot;,
     &quot;url&quot;: &quot;/api/advertisement/detail&quot;,
     &quot;timeCost&quot;: 3
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;ES存储数据，并更新结构数据, 自动添加 url 和 timecost 字段&lt;/li&gt;
      &lt;li&gt;Kibana 统一提供查询, 可以通过 url 和 timecost 字段进行&lt;a href=&quot;https://es-ras1ax3s.kibana.tencentelasticsearch.com:5601/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-15m,to:now))&amp;amp;_a=(columns:!(message,container.name,reqUri,reqTime),filters:!(),index:'16ad3800-cf56-11eb-83c7-d711353ac049',interval:auto,query:(language:kuery,query:''),sort:!())&quot;&gt;查询和聚合处理&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/blockquote&gt;
&lt;/details&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;时间线&lt;/p&gt;

    &lt;div class=&quot;mermaid&quot;&gt;
 graph LR;
     mainMade([自建 ELK]);
     buy([购买 ES 集群 和 Kibana]);
     logstash([自建 Logstash]);
     handle([利用 Logstash 处理数据]);
     upload([上传处理后的数据至 ES]);
     kanban([搭建 SLO/SLI 看板]);
     mainMade--&amp;gt;buy--&amp;gt;logstash--&amp;gt;handle--&amp;gt;upload--&amp;gt;kanban
 &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;遇到的一些坑&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;elasticsearch 本身会使用堆外内存, 即使设置了最大内存限制 Xmx 也没有用, 很容易导致 OOM&lt;/li&gt;
      &lt;li&gt;logstash 本身的 &lt;a href=&quot;https://logz.io/blog/logstash-grok/&quot;&gt;gork 功能&lt;/a&gt;很强大, 但是很难&lt;a href=&quot;https://es-ras1ax3s.kibana.tencentelasticsearch.com:5601/app/dev_tools#/grokdebugger&quot;&gt;调试&lt;/a&gt;, 而且在 ES 的字段类型重建 &lt;a href=&quot;https://discuss.elastic.co/t/how-to-update-a-field-type-of-existing-index-in-elasticsearch/53892&quot;&gt;tricky&lt;/a&gt;
        &lt;details&gt;
          &lt;summary&gt;
eg
&lt;/summary&gt;
          &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input { beats { port =&amp;gt; 5044 } tcp { port =&amp;gt; 5000 } }

filter {
  grok {
    match =&amp;gt; { &quot;message&quot; =&amp;gt; ['%{TIMESTAMP_ISO8601:reqTime}  %{GREEDYDATA} %{URIPATH:reqUri}, %{GREEDYDATA}time cost = %{NUMBER:reqCostMs} ms'] }
  }
  mutate {
    convert =&amp;gt; { &quot;reqCostMs&quot; =&amp;gt; &quot;integer&quot; }
  }
  date {
    match =&amp;gt; [ &quot;reqTime&quot;, &quot;ISO8601&quot;, &quot;YYYY-MM-dd HH:mm:ss&quot;, &quot;YYYY-MM-dd HH:mm:ss.ZZZ&quot; ]
      target =&amp;gt; &quot;reqTime&quot;
      locale =&amp;gt; &quot;en&quot;
  }
}
output {
  elasticsearch {
    hosts =&amp;gt; &quot;172.21.16.2:9200&quot;
      ecs_compatibility =&amp;gt; disabled
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;          &lt;/div&gt;
        &lt;/details&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;what-the-next&quot;&gt;What the next…&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;生产优先
    &lt;ul&gt;
      &lt;li&gt;推荐&lt;/li&gt;
      &lt;li&gt;分享&lt;/li&gt;
      &lt;li&gt;营销活动&lt;/li&gt;
      &lt;li&gt;大数据分析&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;服务化&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;只有在业务量起来之后，推荐，大数据，微服务这些才会有意义&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB;
    op([Devops]);
    op1(gitlab CI/CD)
    op10(K8S)
    op11(自动部署)
    op12(快速扩容)
    op13(权限控制)
    op14(日志输出)
    op15(监控报警)
    op2(指标数据)
    op21(SLO/SLI &lt;br /&gt; Kibana看板)
    op22(系统数据 &lt;br /&gt; Netdata)
    op23(业务数据 &lt;br /&gt; BI看板)
    op3(报警)
    op31(业务数据)
    op32(错误率)
    op33(服务器指标)
    op--&amp;gt;op1 &amp;amp; op2 &amp;amp; op3;
    op1--&amp;gt;op10--&amp;gt;op11 &amp;amp; op12 &amp;amp; op13 &amp;amp; op14 &amp;amp; op15;
    op2--&amp;gt;op21 &amp;amp; op22 &amp;amp; op23;
    op3--&amp;gt;op31 &amp;amp; op32 &amp;amp; op33;
    click op11 &quot;https://gitlab.easeprime.com/ease/backend_service/-/blob/dev/.gitlab-ci.yml#L17&quot; _blank
    click op12 &quot;https://gitlab.easeprime.com/ease/nginx-prod-conf/-/blob/master/sites-enabled-erb/java&quot; _blank
    click op13 &quot;https://gitlab.easeprime.com/ease/backend_service/-/settings/ci_cd&quot; _blank
    click op1 &quot;https://docs.gitlab.com/ee/ci/introduction/img/gitlab_workflow_example_11_9.png&quot; _blank
    click op20 &quot;https://es-ras1ax3s.kibana.tencentelasticsearch.com:5601/app/discover#/?_g=(filters:!(),query:(language:kuery,query:''),refreshInterval:(pause:!f,value:900000),time:(from:now-24h,to:now))&amp;amp;_a=(columns:!(message,container.name),filters:!(),index:'16ad3800-cf56-11eb-83c7-d711353ac049',interval:auto,query:(language:kuery,query:''),sort:!())&quot; _blank
    click op21 &quot;http://bi.easeprime.com/question/9?type=STORY&amp;amp;percent=0.99&amp;amp;day=30&amp;amp;playCount=10&amp;amp;dayCreatedAt=30&quot; _blank
    click op22 &quot;http://metrics.easeprime.com&quot; _blank
    click op23 &quot;http://bi.easeprime.com/question/9?type=STORY&amp;amp;percent=0.99&amp;amp;day=30&amp;amp;playCount=10&amp;amp;dayCreatedAt=30&quot; _blank
    click op24 &quot;http://sba.easeprime.com&quot; _blank

    style op10 fill:#f96f,stroke-dasharray: 5 5
    style op11 fill:#f96f,stroke-dasharray: 5 5
    style op12 fill:#f96f,stroke-dasharray: 5 5
    style op13 fill:#f96f,stroke-dasharray: 5 5
    style op14 fill:#f96f,stroke-dasharray: 5 5
    style op15 fill:#f96f,stroke-dasharray: 5 5
    style op3 fill:#f96f,stroke-dasharray: 5 5
&lt;/div&gt;</content><author><name>dengqinghua</name></author><summary type="html">该部分为后端团队(2人) 从0到1 搭建的一套架构体系。</summary></entry><entry><title type="html">晋升指南笔记</title><link href="https://dengqinghua.github.io/learn-how-to-promote.html" rel="alternate" type="text/html" title="晋升指南笔记" /><published>2021-07-14T00:00:00+08:00</published><updated>2021-07-14T00:00:00+08:00</updated><id>https://dengqinghua.github.io/learn-how-to-promote</id><content type="html" xml:base="https://dengqinghua.github.io/learn-how-to-promote.html">&lt;h2 id=&quot;comd-能力模型&quot;&gt;COMD 能力模型&lt;/h2&gt;
&lt;p&gt;COMD, aka, Complexity-Oriented Multi-Dimension 多维度 + 复杂度&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;维度
    &lt;ul&gt;
      &lt;li&gt;业务&lt;/li&gt;
      &lt;li&gt;技术&lt;/li&gt;
      &lt;li&gt;管理&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;复杂度
    &lt;ul&gt;
      &lt;li&gt;规模, 多少人参与, 多少个系统, 多少个功能, 多少个业务&lt;/li&gt;
      &lt;li&gt;时间, 开发时间周期, 技术预测的周期(多长时间进行技术更替), 业务规划的时间(1年/3年的业务方向和战略)&lt;/li&gt;
      &lt;li&gt;环境, 稳定性(是否经常变化), 透明性(是否能及时获取到商业资讯) 和 可预见性(是否会发生无法预测的黑天鹅事件)&lt;/li&gt;
      &lt;li&gt;创新, 包括 理论创新(新理论 从0到1), 思想创新(新的思路思考问题) 和 技巧创新(非常规的细节和技巧)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;简单归纳如下:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;维度/复杂度&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;规模复杂度&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;时间复杂度&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;环境复杂度&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;创新复杂度&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;技术维度&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;代码量, 系统数量&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;预测x年内的技术发展&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;稳定性低，透明度高，可预见性高&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N/A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;管理维度&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;涉及到团队的个数, 团队的人数&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;项目的持续时间&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;稳定性高，透明度高，可预见性高&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N/A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;业务维度&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;功能点的个数, 业务方数量&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x年的业务规划&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;稳定性低，透明度低，可预见性低&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N/A&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;所以，如果以上面的 COMD 能力模型来思考 &lt;strong&gt;企业的职级评定&lt;/strong&gt; 和 &lt;strong&gt;个人的能力评定&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;企业维度&quot;&gt;企业维度&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;员工技术能力如何?(体现在之前做过的项目经历，工作时长，属于例行工作吗? 创新性如何?)&lt;/li&gt;
  &lt;li&gt;员工会管理吗? (管理了多少个团队, 或者管理了多少人? 主导什么样的项目?)&lt;/li&gt;
  &lt;li&gt;员工业务能力怎么样?(最复杂的业务是什么? 是否参与过业务规划? 对未来业务的定位和判断是什么)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;个人维度&quot;&gt;个人维度&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;我的技术能力如何体现? (如何参与复杂的系统, 预测技术发展 和 进行技术创新)&lt;/li&gt;
  &lt;li&gt;我如何参与管理? (管理规模, 自我定位 和 时间分配)&lt;/li&gt;
  &lt;li&gt;我如何参与业务? (关键业务落地, x年业务规划如何制定? 如何进行业务创新)&lt;/li&gt;
&lt;/ul&gt;

&lt;details&gt;
  &lt;summary&gt;
Me?
&lt;/summary&gt;
  &lt;blockquote&gt;

    &lt;ol&gt;
      &lt;li&gt;我的技术能力如何体现?
        &lt;ul&gt;
          &lt;li&gt;从 0 到 1 的能力, 快速搭建一套完整的前后端系统, 包括 基础设施&lt;/li&gt;
          &lt;li&gt;在公司首席架构师带领下, 参与并主导了公司最复杂的系统: 角标系统的重构和落地(耗时1个月, 涉及三个部分的改造, 进行了技巧创新)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;我如何参与管理?
        &lt;ul&gt;
          &lt;li&gt;管理过 13个人的团队, 在管理期间主导了招商的商家从 入驻 到 上架 商品的全流程的技术设计&lt;/li&gt;
          &lt;li&gt;数据中台服务, 涉及到 三个团队, 耗时两个月左右, 负责数据中心的整体建模, 方案设计和最终落地&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;我如何参与业务?
        &lt;ul&gt;
          &lt;li&gt;从 0 到 1 开启 西瓜AI 业务线, 推动力 西瓜AI 课 从 投放, 拉新, 课程涉及 和 课程续费 的完整落地&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;从上面的内容来看, 还是有很大的进步空间&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/details&gt;

&lt;h2 id=&quot;p6p9&quot;&gt;P6~P9&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;职级&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;要求&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;技术-管理-业务比重&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;P6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;完成业务功能&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10-0-0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;P7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;管理1个团队中3~10人&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;7-2-1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;P8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;管理一条业务线, 包括多个团队&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N/A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;P9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;管理一条事业部, 包括多个业务线&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N/A&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;什么样的人事品质更容易晋升&quot;&gt;什么样的人/事/品质更容易晋升&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;主动做事
    &lt;ul&gt;
      &lt;li&gt;关注业务目标和业务数据&lt;/li&gt;
      &lt;li&gt;关注自己负责的系统的各种指标和数据(机房部署/QPS/SLI/SLO/LATENCY)&lt;/li&gt;
      &lt;li&gt;关注对外的时间承诺&lt;/li&gt;
      &lt;li&gt;关注主管的成长路径&lt;/li&gt;
      &lt;li&gt;主动找主管沟通&lt;/li&gt;
      &lt;li&gt;主动和业务沟通&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;这一块很多事情是偏沟通的, 主动找你的主管沟通, 主动了解所负责的业务的数据&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;成长原则
    &lt;ul&gt;
      &lt;li&gt;跳出舒适圈&lt;/li&gt;
      &lt;li&gt;定期复盘&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;复盘: 做的好的/不好的/不好的原因/改进的点/踩过的坑&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;价值原则
    &lt;ul&gt;
      &lt;li&gt;个人能力/影响力价值(主要在面试的时候展示)&lt;/li&gt;
      &lt;li&gt;业务价值(晋升时候展示)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;需要分配好自身的时间, 不要在 &lt;strong&gt;看起来很重要但是对工作看来没有长远价值的事情&lt;/strong&gt; 上花太多时间, 比如学习 编译原理, 算法导论, 每天刷 leecode 等等&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;绩效关注结果, 晋升关注能力的提升&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;通用步骤&quot;&gt;通用步骤&lt;/h2&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TB;
    id1[当前级别获得好绩效]--&amp;gt;id2[按下一级别的要求提升自身能力]--&amp;gt;id3[争取下一级别的事情]--&amp;gt;id4[拿到下一个级别的工作结果]--&amp;gt;id5[参加职级晋升]--&amp;gt;id1;
&lt;/div&gt;

&lt;h2 id=&quot;ppt&quot;&gt;PPT&lt;/h2&gt;
&lt;h3 id=&quot;基本认知&quot;&gt;基本认知&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;晋升需要有战功, 有绩效, 但是更重要的是突出 &lt;strong&gt;能力的提升&lt;/strong&gt;, 即 能力已经到底 晋升的级别&lt;/li&gt;
  &lt;li&gt;内容需要丰富, 但是需要有重点, 不能过于累赘让别人抓不住重点&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;框架&quot;&gt;框架&lt;/h3&gt;
&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    ppt([框架])--&amp;gt;introduction[自我介绍];
    ppt--&amp;gt;main[自述材料];
    ppt--&amp;gt;other[辅助内容];
    introduction--&amp;gt;mainPart1[基本信息, 包括团队, 业务, 职级 和 晋升的级别];
    introduction--&amp;gt;mainPart2[当前职责, 包括 业务, 团队规模, 核心岗位等情况];
    introduction--&amp;gt;mainPart3[工作经历, 需要突出亮点内容];
    main--&amp;gt;main1[3到5个论据, 展示出能力提升到申请的职级的级别];
    other--&amp;gt;other1[自我总结];
    other--&amp;gt;other2[发展规划];
&lt;/div&gt;

&lt;h3 id=&quot;自述材料&quot;&gt;自述材料&lt;/h3&gt;

&lt;p&gt;利用 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/46584109&quot;&gt;金字塔原理&lt;/a&gt; 来描述做了什么。&lt;/p&gt;

&lt;p&gt;技巧&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;将 PPT 当做 &lt;strong&gt;提词器&lt;/strong&gt; 而不是演讲稿&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;内容和 &lt;strong&gt;目标职级&lt;/strong&gt; 能力要求强相关&lt;/p&gt;

    &lt;details&gt;
      &lt;summary&gt;
  Me?
  &lt;/summary&gt;
      &lt;blockquote&gt;

        &lt;p&gt;这个是非常大的教训，上次述职答辩时，过多地时间花在介绍业务的问题
  和当前的现状上，而不是放在 &lt;strong&gt;我已经达到了XXX级别的要求&lt;/strong&gt; 这一点上面。
  最后获得的反馈是：&lt;/p&gt;
        &lt;ol&gt;
          &lt;li&gt;仿佛走错了片场，以为是产品的述职&lt;/li&gt;
          &lt;li&gt;你现在做的事情体现的能力，是你当前的职级的能力，你很棒，但是并未达到 XXX级别 的要求&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/blockquote&gt;
    &lt;/details&gt;
  &lt;/li&gt;
  &lt;li&gt;STAR(situation, task, action, result) 来描述论剧
    &lt;ul&gt;
      &lt;li&gt;Task 和 Action 一定要注意原创性(也就是哪些是你做的, 项目的成功是否代表你本身非常厉害, 你在里面做了什么很重要)&lt;/li&gt;
      &lt;li&gt;注意业务质量的输出, 成果是什么(用绝对值, 用具体的金额)&lt;/li&gt;
      &lt;li&gt;Result 一定要写的很具体&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;时间控制
    &lt;ul&gt;
      &lt;li&gt;提前预演(自己单独讲一遍, 拉上组内评审一遍)&lt;/li&gt;
      &lt;li&gt;用图来简化自己描述背景的时间&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;学习方法&quot;&gt;学习方法&lt;/h2&gt;
&lt;h3 id=&quot;海绵学习法-10000小时理论&quot;&gt;海绵学习法-10000小时理论&lt;/h3&gt;
&lt;p&gt;每天一小时(早上半小时, 上班前半小时, 睡前半小时), 周末两小时&lt;/p&gt;

&lt;p&gt;关键是要 &lt;strong&gt;可以坚持下来的方式&lt;/strong&gt;, 其实就跟减肥健身差不多, 需要坚持, 以 5年, 10年的维度来看&lt;/p&gt;

&lt;h3 id=&quot;规划落地输出&quot;&gt;规划/落地/输出&lt;/h3&gt;
&lt;p&gt;学习规划, 这里是更多指的是指阅读的规划&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    split[拆分];
    split1[能力拆分];
    time1[时间拆分];
    action[行为拆分];
    split--&amp;gt;split1 &amp;amp; time1 &amp;amp; action;
    split1--&amp;gt;split2[技能/原理];
    split1--&amp;gt;split21[业务];
    split1--&amp;gt;split22[管理];
    split2--&amp;gt;split3[Paper];
    split2--&amp;gt;split5[专业书籍];
    split2--&amp;gt;split4[实战技巧如 文档等];
    time1--&amp;gt;time2[2到3年的大目标];
    time1--&amp;gt;time3[小目标控制在半年内];
    action--&amp;gt;action1[通读书籍];
    action--&amp;gt;action2[挑选和自己工作相关的重点阅读];
    action--&amp;gt;action3[遇到问题后再回顾];
    action--&amp;gt;action4[实战];
&lt;/div&gt;

&lt;p&gt;输出&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;名词和概念输出&lt;/li&gt;
  &lt;li&gt;文档/思考输出&lt;/li&gt;
  &lt;li&gt;分享&lt;/li&gt;
  &lt;li&gt;业务/实战&lt;/li&gt;
&lt;/ul&gt;

&lt;details&gt;
  &lt;summary&gt;
Me?
&lt;/summary&gt;
  &lt;blockquote&gt;

    &lt;ol&gt;
      &lt;li&gt;之前会为自己设计 &lt;a href=&quot;https://blog.dengqinghua.net/ruby_knowledge_tree.html&quot;&gt;知识树&lt;/a&gt;，尝试去整理当前需要的知识技能&lt;/li&gt;
      &lt;li&gt;会尝试去根据自己的短处去阅读一些书&lt;/li&gt;
      &lt;li&gt;自己的习惯是快速地读完一本书，拖得越久越无法落地&lt;/li&gt;
      &lt;li&gt;总结和整理比较少，主要是因为懒，还有就是因为不感兴趣，比如 TCP 三次握手/X次挥手&lt;/li&gt;
      &lt;li&gt;和学习技术相比起来，反而觉得自己在练琴上面更有目标感一些，制定的计划比较容易落地，有规划 输出 和 复盘&lt;/li&gt;
      &lt;li&gt;更多的深度思考，从深度(同主题)，宽度(同领域不同主题) 和 广度(不同领域) 去思考相同的问题&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/blockquote&gt;
&lt;/details&gt;

&lt;h3 id=&quot;链式比较环式学习法&quot;&gt;链式/比较/环式学习法&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;链式&lt;/p&gt;

    &lt;p&gt;解决&lt;strong&gt;深度&lt;/strong&gt;问题, 问题往往是环环相扣的, 往往你看到的只是表象, 深层原因是更复杂的底层逻辑&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;领域维度(自顶向下)
        &lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    framework[&quot;语言框架&quot;];
    lang[编程语言];
    sys[操作系统];
    network[计算机网络];
    tool[工具和配置];
    core[操作系统内核];
    framework--&amp;gt;lang--&amp;gt;sys--&amp;gt;network--&amp;gt;tool--&amp;gt;core;
&lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;细节维度(由表及里)
        &lt;div class=&quot;mermaid&quot;&gt;
graph LR;
    interface[API接口];
    theroy[&quot;设计原理(通用原理)&quot;];
    landing[设计方案];
    sourceCode[源码实现];
    interface--&amp;gt;theroy--&amp;gt;landing--&amp;gt;sourceCode;
&lt;/div&gt;

        &lt;details&gt;
          &lt;summary&gt;
Me?
&lt;/summary&gt;
          &lt;blockquote&gt;

            &lt;ol&gt;
              &lt;li&gt;个人喜欢的还是 &lt;strong&gt;细节维度&lt;/strong&gt;。 比如我想看看 guava 缓存 的实现，我会
                &lt;ul&gt;
                  &lt;li&gt;先去看有哪些接口&lt;/li&gt;
                  &lt;li&gt;再去思考缓存的通用设计原理是什么，有哪些算法&lt;/li&gt;
                  &lt;li&gt;再去看 guava 选择的设计方案 是什么&lt;/li&gt;
                  &lt;li&gt;最后再去看缓存的核心源码实现&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;领域维度的层次太高了，好处是不会太纠结细节，缺点是没有那么有感觉，不太会总结或者说总结了之后也还是想知道细节&lt;/li&gt;
              &lt;li&gt;不过之后在学习一个技术知识的时候，需要思考:
                &lt;ul&gt;
                  &lt;li&gt;自己是哪一种方式?&lt;/li&gt;
                  &lt;li&gt;学习到哪一个层级了?&lt;/li&gt;
                  &lt;li&gt;预期学到哪个层级?&lt;/li&gt;
                  &lt;li&gt;如何将不同层级的不同知识点串起来，并应用到其他的场景中?&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ol&gt;
          &lt;/blockquote&gt;
        &lt;/details&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;链式学习, 越上层越偏应用, 底层偏原理。个人喜欢应用为主, 抓住主要的理论点即可&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;比较&lt;/p&gt;

    &lt;p&gt;简单来说, 在学习的时候带着这样的问题: 解决问题XXX, 为什么用 A方案, 而不用 B方案 这个问题。通过横向对比来学习不同解决方案的背后原理和适用范围&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;总结一个技术主题的 &lt;strong&gt;关键技术点&lt;/strong&gt; 比如 redis 的 高可用, 高性能, 数据结构 和 功能 分别是什么&lt;/li&gt;
      &lt;li&gt;对比同类型产品/技术的 关键技术点 的差异&lt;/li&gt;
      &lt;li&gt;根据差异点, 总结不同技术下 的 背景原理 和 适用场景&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;环式&lt;/p&gt;

    &lt;p&gt;对于业务而言, 多画一下业务闭环流程图, 思考技术在各个环节的位置和所处的作用. 环式能让你更聚焦全局而不是个体&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;details&gt;
  &lt;summary&gt;
Me?
&lt;/summary&gt;
  &lt;blockquote&gt;

    &lt;p&gt;其实这块在晋升时候也有一些思考, 很多时候出现了 &lt;strong&gt;“没什么可讲”, “没什么可回答”, “没什么可思考”&lt;/strong&gt; 的问题。
也就是说, 自己太过于关注自己的简单的研发工作了, 没有从点到面, 从面到框架的方式, 来思考自己的技术, 产品 和
业务。在不同深度，宽度 和 广度 思考问题。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/details&gt;

&lt;h3 id=&quot;play--tech&quot;&gt;Play &amp;amp; Tech&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;What I hear, I forget. What I see, I remember. What I do, I understand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;各种学习方式的留存效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/learning-retention.webp&quot; alt=&quot;leaning-retention&quot; width=&quot;85%&quot; /&gt;&lt;/p&gt;

&lt;details&gt;
  &lt;summary&gt;
Me?
&lt;/summary&gt;
  &lt;blockquote&gt;

    &lt;p&gt;很真实啊，自己看 PPT 或者听一个讲座，远没有自己实践和分享来得多。将你知道的讲一遍给别人听，准备被提问的问题，这样的进步才会更显著一些。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/details&gt;

&lt;p&gt;这里的 Play 对应着 实践, Tech 对应着 教授他人.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Play
    &lt;ul&gt;
      &lt;li&gt;试玩。手动搭建服务，弄清楚所有配置项的作用，以及为什么提供这样的功能&lt;/li&gt;
      &lt;li&gt;核心功能测试。&lt;/li&gt;
      &lt;li&gt;异常测试。包括边界测试和性能测试，测试在不同的场景(比如1C2G 下的机器? 10000QPS 并发?)下的服务反馈&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tech
    &lt;ul&gt;
      &lt;li&gt;写作。写作最重要的是框架性，思考你传达的内容，先写框架，再写细节&lt;/li&gt;
      &lt;li&gt;培训。多准备一些问题，从深度，宽度和广度去提问和培训&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;规划-执行-复盘&quot;&gt;规划-执行-复盘&lt;/h2&gt;
&lt;h3 id=&quot;规划&quot;&gt;规划&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;使用 OKR 而不是 KPI 进行规划, 使用 3C 来进行方案选择，问题思考 和 提问&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;OKR, 价值的体现, 更注重(长期)结果和目标, 比如里程碑(系统从0到1, 解决技术债务等等)&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;KPI&lt;/del&gt; 指标的体现, 更注重当前(短期)的任务是否达成, 对于一些创造性或者人性相关的工作内容时候, 往往容易跑偏&lt;/li&gt;
  &lt;li&gt;OKR 和 KPI 的关系: KPI 可以作为 KR 的形式&lt;/li&gt;
  &lt;li&gt;3C方案设计, (业务/技术/管理)方案设计三个(3C, 3 choices)，也可以用在提问环节。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;执行&quot;&gt;执行&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;使用 PDCA 来落地执行&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Plan, 执行计划(短周期)&lt;/p&gt;

    &lt;p&gt;这里和 OKR 的区别是，OKR 是用来做长期规划的。 注意优先级，复杂的事情需要拆成小任务来处理，资源上有问题时，用上级的能力协调资源。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do&lt;/p&gt;

    &lt;p&gt;做好信息同步，主要包括 &lt;strong&gt;进度，里程碑, 风险 和 问题&lt;/strong&gt;，风险要提前告知，delay 多少天，就提前多少天告知。问题要提前暴露出来，及时同步解决的方案和解决的时间&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check&lt;/p&gt;

    &lt;p&gt;及时 check 进度, 使用 5W 来分析根因&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Act&lt;/p&gt;

    &lt;p&gt;基于 Check 的结果，制定下一步的行动。这里需要总结和汇报结果，主要是看结果是否符合预期，是否有经验教训，挑选 3个 以内的内容进行落地即可&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;复盘&quot;&gt;复盘&lt;/h3&gt;
&lt;h4 id=&quot;5w分析法&quot;&gt;5W分析法&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://baike.baidu.com/item/5why%E5%88%86%E6%9E%90%E6%B3%95/575907&quot;&gt;5W&lt;/a&gt; 可以用在 业务/技术/方案选择/管理 上，在进行链式学习的时候，也可以进行自我提问&lt;/p&gt;

&lt;p&gt;注意: 需要聚焦在问题本身，不要变成杠精似地撕逼&lt;/p&gt;

&lt;h4 id=&quot;4d总结法&quot;&gt;4D总结法&lt;/h4&gt;
&lt;p&gt;4D, 4 dimensions&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;结果(价值)维度&lt;/p&gt;

    &lt;p&gt;价值是什么: 业务指标(销售额, 营业额)，技术指标(故障率, SLI/SLO) 和 管理指标(团队的开发效率)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数据维度&lt;/p&gt;

    &lt;p&gt;提升了开发效率，应该改为具体的 开发周期从 X 周减少到 Y 周, 人数从 X 人 减少到 X 人&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;注意: 这里的数据需要在不同的上下文有不同的意义, 比如当前用户数只要1000，提升 1000% 是很容易的, 但是 如果是当前的微信用户，用户数再提升 10% 都很难&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;技术维度&lt;/p&gt;

    &lt;p&gt;按照 链式/比较 学习法进行学习, 并用此总结经验和教训&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;成长维度&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;技术提升&lt;/li&gt;
      &lt;li&gt;业务理解
        &lt;ul&gt;
          &lt;li&gt;使用场景&lt;/li&gt;
          &lt;li&gt;目标用户&lt;/li&gt;
          &lt;li&gt;效果等等&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;管理技巧(项目组织, 沟通方式 和 做事技巧)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;金字塔汇报&quot;&gt;金字塔汇报&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;4D 总结法能让你客观地对自己和整个项目做完整的剖析和认知，但是会更多偏于细节，金字塔更多地是高维度地汇报，抓重点和关键点进行汇报&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;金字塔原理: 1中心, 3论点, 7论据 (1, 3, 7可以认为是 &lt;a href=&quot;https://www.sohu.com/a/166147743_774979&quot;&gt;magic number&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;论点, 输出 和 结果，要先阐述；论据，过程 和 内容 要后阐述(甚至不阐述)&lt;/p&gt;

&lt;p&gt;内容结构&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;结论
    &lt;ul&gt;
      &lt;li&gt;简明概要&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;具体分析
    &lt;ul&gt;
      &lt;li&gt;细节数据&lt;/li&gt;
      &lt;li&gt;为什么是这样的数据&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;关键事项
    &lt;ul&gt;
      &lt;li&gt;业务架构图/技术架构图&lt;/li&gt;
      &lt;li&gt;阶梯图&lt;/li&gt;
      &lt;li&gt;时间线&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;四线复盘&quot;&gt;四线复盘&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;时间线&lt;/li&gt;
  &lt;li&gt;问题链(5w分析法)&lt;/li&gt;
  &lt;li&gt;责任链
    &lt;ul&gt;
      &lt;li&gt;违反规范私自操作&lt;/li&gt;
      &lt;li&gt;问题源头&lt;/li&gt;
      &lt;li&gt;问题放大&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;改进线(可以落地的改进方案很重要)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><summary type="html">COMD 能力模型 COMD, aka, Complexity-Oriented Multi-Dimension 多维度 + 复杂度</summary></entry><entry><title type="html">fingerstyle blues level 1-3</title><link href="https://dengqinghua.github.io/finger-style-blues-l123.html" rel="alternate" type="text/html" title="fingerstyle blues level 1-3" /><published>2021-06-28T00:00:00+08:00</published><updated>2021-06-28T00:00:00+08:00</updated><id>https://dengqinghua.github.io/finger-style-blues-l123</id><content type="html" xml:base="https://dengqinghua.github.io/finger-style-blues-l123.html">&lt;hr data-content=&quot; 曲谱 &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;曲谱: &lt;a href=&quot;https://pan.baidu.com/disk/pdfview?path=%2F42%2F%E9%9F%B3%E4%B9%90%2F%E6%95%99%E6%9D%90%2FProGuitar%2FfingerstyleBlues%2Fproguitar-fingerstyle-blues.pdf&quot;&gt;PDF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;来源: &lt;a href=&quot;https://www.proguitar.com/academy/lessons/fingerstyle-blues&quot;&gt;Fingerstyle blues in Pro Guitar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;我的翻弹
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1ZK4y1o7wD&quot;&gt;Level1&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1GK4y1G7sq&quot;&gt;Level2&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV17y4y1M7vV&quot;&gt;Level3&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; 律动 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;boom-chick&lt;/li&gt;
  &lt;li&gt;制音&lt;/li&gt;
  &lt;li&gt;三连音的感觉, 声音需要一致&lt;/li&gt;
  &lt;li&gt;shuffle&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 需要加强的 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;boom-chick 的音量太大了, 由于自己的手指是没有指甲的, 所以导致 boom-chick 的声音过大, 而旋律音太小&lt;/li&gt;
  &lt;li&gt;boom-chick 的声音太过死板, 听 Emil 弹奏的时候, 其实他是专门有区分的, 比如会在强调一下特别的根音部分 【尝试过这样, 但是发现觉得自己弹奏得不够流畅, 经常会导致节奏乱掉】&lt;/li&gt;
  &lt;li&gt;指套和手指混弹的时候不太自然（需要练习 banjo rolling 和 open string lick 技巧）这块在三连音的时候, 问题特别明显&lt;/li&gt;
  &lt;li&gt;扫弦的时候声音太大了. Emil 有很多地方夹杂着很多扫弦+制音的技巧, 我在录音的时候, 发现自己在用指套扫的时候声音特别大, 控制得不好&lt;/li&gt;
  &lt;li&gt;Ghost Note 的声音太小了. 音符不够, Ghost Note 来凑, 如果声音太小, 就会少点儿味道&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 做的不错的 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;分段进行了练习, 开着节拍器进行了慢速练习&lt;/li&gt;
  &lt;li&gt;听了很多遍原曲, 跟着原曲一起演奏, 去找感觉&lt;/li&gt;
  &lt;li&gt;跟着原曲的慢速版本练习了很多遍, 并调整了速度进行练习&lt;/li&gt;
  &lt;li&gt;录音的时候很放松, 分时间进行了录制, 一次录制的时间不超过 40 分钟&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 下次录音我会尝试的 &quot; /&gt;

&lt;ol&gt;
  &lt;li&gt;录音的时候跟着原曲弹/跟着节拍器弹&lt;/li&gt;
  &lt;li&gt;尝试对现有的曲子做一些改编, 改编音符, 节奏, 律动或者 Lick 等&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot; 思考 &quot; /&gt;

&lt;p&gt;最近学习 Emil 的曲子, 也看了他非常多的视频, 很喜欢他的风格. 发现他常用的技巧包括下面的内容&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Boom Chick&lt;/li&gt;
  &lt;li&gt;Open String Lick&lt;/li&gt;
  &lt;li&gt;Banjo Rolling&lt;/li&gt;
  &lt;li&gt;Harmonic&lt;/li&gt;
  &lt;li&gt;Arp + Chord Inversion …&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些都在他的一个视频: FingerStyle Learning 里面有讲, 里面基本上讲述了他对乐理的理解, 技巧的理解等等.&lt;/p&gt;

&lt;p&gt;后面我就会在想一个问题, what makes emil emil? 其实这些技巧是其次的, 比这些技巧更难的是, Emil 弹琴时候的放松的感觉, 偶尔拿出一些细节来分析
的话, 很很惊奇地发现他有一些特别的 accent, 比如他自己很常用的 ipm 技巧, 他的强弱感很重, 一些慢速的曲子会弹得很稳, 但是
节奏是流动的(比如 silent night, 他的民谣等等)&lt;/p&gt;

&lt;p&gt;他的音乐的音乐性很强, 感染力很强, 无论是慢速的, 还是那种 blues or Jazz.&lt;/p&gt;

&lt;p&gt;自己也练了很久的琴了, 有时候也会&lt;a href=&quot;/nowadays-training-music&quot;&gt;质疑&lt;/a&gt;自己为什么要花这么多时间练琴. 后来也想明白了, 比练琴更重要的是, 是 随便弹弹
时候的愉悦的感觉, 毕竟总得有自己喜欢的东西吧&lt;/p&gt;

&lt;p&gt;很喜欢他发在 ins 里面的一句话, 也贴在这里, 勉励一下自己吧&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/whatemilsays&quot; alt=&quot;whatemilsays&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When it comes to praticing, everyone feels like they’re “stuck” at some point. You &lt;strong&gt;lose&lt;/strong&gt; the spark and you can’t push past the lack of inspiration.&lt;/p&gt;

  &lt;p&gt;The guiding light in these situations for me, has always been “thinking small”. You don’t need to cover all aspects of music in your window of
practice time.&lt;/p&gt;

  &lt;p&gt;Find a small musical idea.. it could be a simple phrase or “link” from one of you musician heroes. Move it around, change keys, change octave change the
feel of it. Let the small idea inspire you and play around with it. You never know where it will take you..
                                                               - Emil Ernebro&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html"></summary></entry><entry><title type="html">最近在思考什么</title><link href="https://dengqinghua.github.io/nowadays-training-music.html" rel="alternate" type="text/html" title="最近在思考什么" /><published>2021-05-31T00:00:00+08:00</published><updated>2021-05-31T00:00:00+08:00</updated><id>https://dengqinghua.github.io/nowadays-training-music</id><content type="html" xml:base="https://dengqinghua.github.io/nowadays-training-music.html">&lt;h3 id=&quot;录音&quot;&gt;录音&lt;/h3&gt;

&lt;p&gt;很久没有录音了, 一方面是照顾娃, 搬家这些事情, 另一方面是因为自己好像懒惰了。更重要的一点是&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;找不到录音的感觉了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;每一次录音的时候都会录制很长时间, 原因还是跟以前一样&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;曲子不是那么熟练, 谱子无法背诵下来&lt;/li&gt;
  &lt;li&gt;一些比较薄弱的点, 没有练好, 导致一直在地方犯错, 比如 烟花易冷 的 横按 下的击勾弦&lt;/li&gt;
  &lt;li&gt;节奏问题, 节奏的时值控制不好, 往往在录制时间过久之后, 节奏会变得散漫和混乱&lt;/li&gt;
  &lt;li&gt;整体的感觉问题
    &lt;ul&gt;
      &lt;li&gt;延音控制不好, 往往是因为音的时值不够, 导致了在一部分的音断掉&lt;/li&gt;
      &lt;li&gt;换和弦太快/太慢, 一般是和弦转换得太快了而不是太慢了, 节奏就乱掉了&lt;/li&gt;
      &lt;li&gt;太紧张, 过于强调某个音或者弱化某个音, 如果某一个技巧不熟练, 这块问题就会变得更严重&lt;/li&gt;
      &lt;li&gt;手指角度问题, 导致音色听起来不均匀(经常三弦的声音和一弦的声音的感觉不一致)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;翻了几次之前写的录音记录的 【下次我会做的】里面有许多上述问题的解决方式&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;着重练习不熟念的部分, 不要着急录音&lt;/li&gt;
  &lt;li&gt;小段小段地录制, 聚焦在小段的录音&lt;/li&gt;
  &lt;li&gt;限制录音时间, 避免无效地录音&lt;/li&gt;
  &lt;li&gt;尽量放松: 跟着原曲弹/手指放松等等&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但是发现, 过一段时间之后, 该有的问题还是有, 这让录音这一件事情变得非常折磨。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;录音变成了一个 KPI, 想完成录音, 但是却始终录不好&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph TD;
    今晚要录出结果--&amp;gt;录的时候发现有问题;
    解决问题--&amp;gt;手指疲惫疲倦--&amp;gt;发现其他问题;
    节奏不稳--&amp;gt;出现了更多问题--&amp;gt;|执着录制|放弃今天的录音,改天再录;
    出现了更多问题--&amp;gt;|放弃录制|接受一个不算好的录音结果,发B站;
&lt;/div&gt;

&lt;p&gt;自己属于挺结果论的吧, 有时候希望练习有回报, 无论是弹琴, 健身, 还是学习, 每一项都是有产出的&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;事件&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;产出&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;弹琴&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B站的视频&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;健身&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;体脂/照片/个人PR视频等&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;工作&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;薪资/职级&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;技术&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;技术文档/工程实践&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;结果论的结果就是有时候会变成怀疑主义, 在做一些事情的时候会一直去质疑事情的本身,
甚至质疑质疑本身, 往往会让人陷入一种莫名的焦虑中&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我需要这么做吗? 我做了有什么意义, 为什么这样做了还是没有达到预期的效果?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这样的思维方式多了之后, 会有强烈的虚无的感觉(也就是失去欲望的感觉)&lt;/p&gt;

&lt;p&gt;然后也找了老师问了一下, 老师的回复依旧是很中肯吧, 认可这种焦虑, 但是也没有速成的方法&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;这瓶颈期是靠时间来磨的, 谁都有瓶颈期, 我也有, 但是这没办法, 因为他不可能说弹琴两三天
三五个月就一下子上去了。建议吧, 第一, 不断地弹新曲子, 第二, 坚持练基本功。经常学习新的
内容, 调节一下, 慢慢的就上去了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;老师的这个建议其实蛮好的, 但是我已经快没有耐心了, 感觉已经很多年了吧, 有一种【道理我都懂,
困难去想办法克服啊! 能不能让快点儿拿到结果】的暴力逻辑&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我会放弃弹琴吗? 兄弟问题【我会放弃健身吗】&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我觉得不会吧, 或者说我想象不出来还能有啥其他属于自己的东西了&lt;/p&gt;

&lt;p&gt;害, 就弹着呗, 可能并没有自己想的那么差吧, 得有点儿耐心, 多琢磨琢磨自己的不足.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;毕竟, 控制自己可能是最简单的一件事情了吧!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;学习&quot;&gt;学习&lt;/h3&gt;

&lt;p&gt;最近学习了 ProGuitar 很多的内容, 包括 chord inversion, fingerstyle blues level 1&amp;amp;2, 还有
一些新的内容, 像 voice leading 等.&lt;/p&gt;

&lt;p&gt;开始听 Jerry Reed 和 Chet Atkins 的曲子, 听乡村会让人心情更加愉悦吧&lt;/p&gt;

&lt;p&gt;吉他的学习跟其他的学习不一样, 看了几十遍也不如弹上几遍.&lt;/p&gt;

&lt;p&gt;平常多花点儿心思在思考上面吧, I suppose.&lt;/p&gt;

&lt;h3 id=&quot;我做什么呢&quot;&gt;我做什么呢&lt;/h3&gt;
&lt;p&gt;按照惯例, 写一下 flag 或者 TODO 吧.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;着重练容易错的地方而不是自己喜欢的整首曲子 20%&lt;/li&gt;
  &lt;li&gt;基本功多练练, 思考有什么是自己缺乏的基本功&lt;/li&gt;
  &lt;li&gt;多弹弹有趣的曲子&lt;/li&gt;
  &lt;li&gt;多听听不同风格的曲子&lt;/li&gt;
  &lt;li&gt;经常录一小段, 30s以内, 保持录音的感觉&lt;/li&gt;
&lt;/ol&gt;</content><author><name>dengqinghua</name></author><category term="music" /><summary type="html">录音</summary></entry><entry><title type="html">Rust 学习笔记</title><link href="https://dengqinghua.github.io/rust-learning.html" rel="alternate" type="text/html" title="Rust 学习笔记" /><published>2021-05-10T00:00:00+08:00</published><updated>2021-05-10T00:00:00+08:00</updated><id>https://dengqinghua.github.io/rust-learning</id><content type="html" xml:base="https://dengqinghua.github.io/rust-learning.html">&lt;h2 id=&quot;词汇&quot;&gt;词汇&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;crate, a collection of Rust source code files&lt;/li&gt;
  &lt;li&gt;immutable varibale, immutable by default&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;shadowing, mutable varibales can be shadowed&lt;/p&gt;

    &lt;details&gt;
      &lt;summary&gt;
eg.
&lt;/summary&gt;
      &lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;
    &lt;/details&gt;
  &lt;/li&gt;
  &lt;li&gt;scalar types, integers, floating-point numbers, booleans and characters&lt;/li&gt;
  &lt;li&gt;two’s complement wrapping. i8 when 256 -&amp;gt; 0&lt;/li&gt;
  &lt;li&gt;turple and array. turple is a multi types data source with fixed length like array&lt;/li&gt;
  &lt;li&gt;(), an empty tuple&lt;/li&gt;
  &lt;li&gt;ownership, make memory safely guarantees&lt;/li&gt;
  &lt;li&gt;mutation only once, can prevent data races at compile time
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;borrow as immutable, should not used after borrowed as mutable&lt;/p&gt;

        &lt;details&gt;
          &lt;summary&gt;
why?
&lt;/summary&gt;
          &lt;p&gt;data race reason:&lt;/p&gt;

          &lt;ul&gt;
            &lt;li&gt;Two or more pointers access the same data at the same time.&lt;/li&gt;
            &lt;li&gt;At least one of the pointers is being used to write to the data.&lt;/li&gt;
            &lt;li&gt;There’s no mechanism being used to synchronize access to the data.&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/details&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;reference rule
    &lt;ul&gt;
      &lt;li&gt;any given time, you can have either one mutable ref or any number of immutable refs&lt;/li&gt;
      &lt;li&gt;refs must always be valid (no dangling refs)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;all things are private by default&lt;/li&gt;
  &lt;li&gt;package -&amp;gt; crate(executable binary) -&amp;gt; module&lt;/li&gt;
  &lt;li&gt;deref coercion, turn &amp;amp;s2 to &amp;amp;s2[..]&lt;/li&gt;
  &lt;li&gt;trait, interface like&lt;/li&gt;
&lt;/ul&gt;</content><author><name>dengqinghua</name></author><summary type="html">词汇</summary></entry><entry><title type="html">maker of application</title><link href="https://dengqinghua.github.io/scratch-maker.html" rel="alternate" type="text/html" title="maker of application" /><published>2021-04-23T00:00:00+08:00</published><updated>2021-04-23T00:00:00+08:00</updated><id>https://dengqinghua.github.io/scratch-maker</id><content type="html" xml:base="https://dengqinghua.github.io/scratch-maker.html">&lt;h3 id=&quot;运维&quot;&gt;运维&lt;/h3&gt;
&lt;h4 id=&quot;机器配置&quot;&gt;机器配置&lt;/h4&gt;
&lt;p&gt;4核8G&lt;/p&gt;

&lt;h4 id=&quot;用户配置&quot;&gt;用户配置&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;su -
useradd YouName
passwd YouName
visudo
YouName &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD:ALL

&lt;span class=&quot;c&quot;&gt;# 设置通用的目录&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /var/www/site
&lt;span class=&quot;nb&quot;&gt;chmod&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; 777 /var/www/site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;软件安装&quot;&gt;软件安装&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; git nginx ruby jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;需要将 docker, nginx, filebeat 加入到自启动项目中&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;docker.service
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;nginx.service
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;filebeat.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/centos/&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/runner/install/linux-repository.html&quot;&gt;gitlab-runner&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;需要将 runner 加入到 root, docker 中，并设置 gitlab-runner 的基本 cp, nginx 等权限&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; root gitlab-runner
  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; docker gitlab-runner
  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;visudo
  gitlab-runner &lt;span class=&quot;nv&quot;&gt;ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /usr/sbin/nginx, /usr/bin/cp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;node
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  curl &lt;span class=&quot;nt&quot;&gt;-sL&lt;/span&gt; https://rpm.nodesource.com/setup_12.x | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash &lt;span class=&quot;nt&quot;&gt;-lu&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; nodejs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;nginx
    &lt;details&gt;
      &lt;summary&gt;
  NGINX 的一些配置参考
  &lt;/summary&gt;
      &lt;p&gt;静态文件&lt;/p&gt;

      &lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;X-Real-IP&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$remote_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;admin.exmaple.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;kn&quot;&gt;client_max_body_size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200M&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/var/www/site/admin_dev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.htm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;try_files&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/index.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;kn&quot;&gt;gzip&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;gzip_buffers&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;gzip_comp_level&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;gzip_min_length&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;gzip_types&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;application/javascript&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;text/css&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;text/xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;gzip_disable&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MSIE&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;[1-6]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kn&quot;&gt;gzip_vary&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;

      &lt;p&gt;SSL&lt;/p&gt;

      &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  server {
      listen 443 ssl;

      server_name api0.exmaple.com;
      ## 这个文件需要放在 /etc/nginx 的目录下
      ssl_certificate 1_api0.exmaple.com_bundle.crt;
      ssl_certificate_key 2_api0.exmaple.com.key;
      ssl_session_timeout 5m;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
      ssl_prefer_server_ciphers on;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;

      client_max_body_size 100M;

      location / {
        proxy_pass http://127.0.0.1:8888;
      }
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;

      &lt;p&gt;负载均衡&lt;/p&gt;

      &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  upstream java_prod_server {
    server 127.0.0.1:8880;
    server 127.0.0.1:8881;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;

      &lt;p&gt;重定向&lt;/p&gt;

      &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  server {
    listen 80;

    server_name admin.exmaple.com;

    return 301 https://admin.exmaple.com$request_uri;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;

      &lt;p&gt;Nginx的简单鉴权&lt;/p&gt;

      &lt;p&gt;&lt;a href=&quot;https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/&quot;&gt;Ref&lt;/a&gt;&lt;/p&gt;

      &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  sudo yum install httpd-tools
  sudo htpasswd -c /etc/nginx/.htpasswd user1
  cat /etc/nginx/.htpasswd

  Nginx 中的配置
  location /api {
      auth_basic           &quot;admin area&quot;;
      auth_basic_user_file /etc/nginx/.htpasswd;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;      &lt;/div&gt;

    &lt;/details&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;基础设施&quot;&gt;基础设施&lt;/h3&gt;
&lt;h4 id=&quot;gitlab&quot;&gt;gitlab&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jl-borges/docker-gitlab&quot;&gt;Ref&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;注意，需要配置服务器的 swap, 见这里 &lt;a href=&quot;https://docs.gitlab.com/omnibus/settings/memory_constrained_envs.html&quot;&gt;SWAP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;建议设置晚上定时重启对应 gitlab 服务, gitlab 经常有内存泄漏问题, &lt;a href=&quot;https://crontab.guru/#0_*_*_*&quot;&gt;定时重启&lt;/a&gt; 是最简单粗暴的方式&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   sudo crontab -e
   # 设置每天凌晨4点的时候重启 gitlab
   0 4 * * * docker restart gitlab_gitlab_1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;需要更改的配置&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TZ=Asia/Shanghai
GITLAB_TIMEZONE=Asia/Shanghai
GITLAB_HOST=gitlab.youDomain.com

GITLAB_ROOT_PASSWORD=password!1234
GITLAB_ROOT_EMAIL=youEmail

SMTP_ENABLED=true
SMTP_DOMAIN=youDomain.com
SMTP_HOST=smtp.ym.163.com
SMTP_PORT=25
SMTP_USER=noreply@youDomain.com
SMTP_PASS=youDomainPsw
SMTP_STARTTLS=true
SMTP_TLS=false
SMTP_AUTHENTICATION=plain
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下面是 CI 的配置例子&lt;/p&gt;

&lt;hr data-content=&quot; java &quot; /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jl-borges/maker/blob/main/java/.gitlab-ci.yml&quot;&gt;.gitlab-ci.yml&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jl-borges/maker/blob/main/java/deploy.sh&quot;&gt;deploy.sh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jl-borges/maker/blob/main/java/ci_settings.xml&quot;&gt;ci_setting.yml&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jl-borges/maker/blob/main/java/Dockerfile&quot;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot; node &quot; /&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;stages:
  - prod-build
  - prod-deploy
variables:
  BUILD_MACHINE_IP: 172.21.x.x
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
prod-build:
  stage: prod-build
  tags:
    - adminBuild
  script:
    - npm install --registry=https://registry.npm.taobao.org
    - npm run build:prod
    - mkdir -p /var/www/site/admin_prod
    - cp -rf $PWD/dist/** /var/www/site/admin_prod
prod-deploy:
  tags:
    - prod
  stage: prod-deploy
  when: manual
  script:
    - scp -Cr youName@$BUILD_MACHINE_IP:/var/www/site/admin_prod /var/www/site/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;其他&quot;&gt;其他&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jl-borges/maker/blob/main/maven/docker-compose.yml&quot;&gt;Maven&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;注: 密码需要到 /nexus-data/admin.password 里面去查看&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jl-borges/docker-reviewboard&quot;&gt;Reviewboard&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;注: 这里不能调用 docker-compose down, 该部分会删除记录… 重启的话, 执行 docker-compose restart&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jl-borges/spring-boot-admin&quot;&gt;Spring boot admin&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jl-borges/baota?organization=jl-borges&amp;amp;organization=jl-borges&quot;&gt;宝塔&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jl-borges/netdata&quot;&gt;Netdata&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jl-borges/metabase&quot;&gt;BI&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;中间件&quot;&gt;中间件&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jl-borges/maker/blob/main/mysql/docker-compose.yml&quot;&gt;MySQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jl-borges/maker/blob/main/redis/docker-compose.yml&quot;&gt;Redis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jl-borges/docker-elk&quot;&gt;ELK&lt;/a&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.12.1-x86_64.rpm
  sudo rpm -vi filebeat-7.12.1-x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Kafak, TODO&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;业务系统&quot;&gt;业务系统&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Java, see legacy&lt;/li&gt;
  &lt;li&gt;Antd-React, see legacy&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;搭建系统路线&quot;&gt;搭建系统路线&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;域名购买, ssl 证书申请, 域名备案&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;邮箱配置, 办公软件等&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;购买机器和服务
    &lt;ul&gt;
      &lt;li&gt;dev 机器, 4核8G 50G硬盘, 2M带宽&lt;/li&gt;
      &lt;li&gt;qa 机器, 2核4G 50G硬盘, 2M带宽&lt;/li&gt;
      &lt;li&gt;prod 机器, 2核4G 50G硬盘, 2M带宽&lt;/li&gt;
      &lt;li&gt;ES 服务 2核4G&lt;/li&gt;
      &lt;li&gt;MySQL 主库&lt;/li&gt;
      &lt;li&gt;MySQL 从库&lt;/li&gt;
      &lt;li&gt;短信服务&lt;/li&gt;
      &lt;li&gt;七牛服务&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;基础服务搭建
    &lt;ul&gt;
      &lt;li&gt;gitlab, 代码仓库, 部署在 dev 机器上&lt;/li&gt;
      &lt;li&gt;maven, java 基础库&lt;/li&gt;
      &lt;li&gt;netdata, 服务器监控&lt;/li&gt;
      &lt;li&gt;metabase, bi工具&lt;/li&gt;
      &lt;li&gt;elk, 日志收集工具&lt;/li&gt;
      &lt;li&gt;sba, java 日志收集&lt;/li&gt;
      &lt;li&gt;redis 服务&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;基础代码部署和初次上线
    &lt;ul&gt;
      &lt;li&gt;利用基础包, 生成后端的基础代码&lt;/li&gt;
      &lt;li&gt;利用 antd, 生成现成的 admin 代码&lt;/li&gt;
      &lt;li&gt;nginx 配置&lt;/li&gt;
      &lt;li&gt;gitlab-ci 配置&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;核心配置
    &lt;ul&gt;
      &lt;li&gt;包名称&lt;/li&gt;
      &lt;li&gt;支付秘钥&lt;/li&gt;
      &lt;li&gt;短信/七牛配置&lt;/li&gt;
      &lt;li&gt;数据库/redis 配置等&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;测试和数据配置
    &lt;ul&gt;
      &lt;li&gt;核心接口整理&lt;/li&gt;
      &lt;li&gt;配置后台数据&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>dengqinghua</name></author><summary type="html">运维 机器配置 4核8G</summary></entry></feed>